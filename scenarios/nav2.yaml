# Name of the scenario
name: nav2-scenario

# Description of the scenario
description: "AMR demo using ROS2"

# Software configuration
configuration:
  # SDF world to use. This can be a Fuel URI, an installed SDF file, an 
  # absolute path, or a relative path to an SDF file.
  world: "https://fuel.ignitionrobotics.org/1.0/OpenRobotics/worlds/industrial-warehouse"
  before_script: 
    - source /opt/ros/galactic/setup.bash
    - source /home/nkoenig/colcon_ws/install/setup.bash
    - ros2 launch nav2_rosdevday_2021 test_launch.py

  # List of models to place in the world
  models:
    # Each model has a URI, pose and name.
    - uri: "https://fuel.ignitionrobotics.org/1.0/OpenRobotics/models/mp_400"
      pose: { x: 3.45, y: 2.15, z: 0.1, roll: 0.0, pitch: 0.0, yaw: 3.1415 }
      name: mp_400

  # Simualtion state recording information.
  record:
    sim-state: true

# A list of tests to execute
tests:
  # Each test has a name
  - name: amr-1
    # A set of triggers, each with a unique name, define how the test is
    # executed.
    triggers:
      # This is a "time" trigger, which requires a time 
      - name: time-trigger-1
        type: time

        # This time trigger will process the "on" commands when a simulation
        # time of 2 seconds is reached.
        time:
          duration: "0 00:00:02.000"
          type: sim

        # The "on" commands define what should happen when the trigger is
        # tripped.
        on:  
          # This expression checks that the mp_400 model has not moved.
          # - expect: ${{mp_400.pose.x == 3.45}}
          # The "script" command executes a command. In this case, it sends a 
          # command velocity to the mp_400 robot.
          - script:
            - source /opt/ros/galactic/setup.bash
            - source /home/nkoenig/colcon_ws/install/setup.bash
            - python3 /home/nkoenig/colcon_ws/src/nav2_rosdevday_2021/nav2_rosdevday_2021/scripts/picking_demo.py

      # This is a "region" trigger, which requires a box region.
      - name: region-trigger-1
        type: region
        geometry:
          # Geometry position in world coordinates
          pos: {x: -3.0, y: 1.0, z: 0.5}
          # This is the pose and dimensions of the region
          box: {size: {x: 1.0, y: 1.0, z: 1.0}}
        # When an entiy enters the regions the following commands are
        # executed.
        on:
          - expect: ${{region-trigger-1.contains(mp_400)}}
          - expect: ${{simulation.time > 10.0}}
          - expect: ${{simulation.time < 60.0}}
